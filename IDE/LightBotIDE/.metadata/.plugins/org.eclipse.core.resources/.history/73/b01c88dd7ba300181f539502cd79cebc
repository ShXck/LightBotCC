package gui;

import java.awt.*;
import java.awt.event.*;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import javax.swing.table.DefaultTableModel;

import interpreter.LightBot_Lang;
import org.tec.comp.utilities.Stream_Handler;

public class IDE_Window implements Runnable, ActionListener {
	
	private JFrame frame;
	private JMenuBar menu_bar;
	private JMenu file_menu;
	private JMenu code_menu;
	private JMenuItem open_file_item;
	private JMenuItem save_file_item;
	private JMenuItem build_code_item;
	private JLabel error_lbl;
	
	private JTextPane coding_field;
	private JScrollPane scroll_pane;
	private JPanel no_wrap_panel;
	
	private final String WINDOW_TITLE = "LightBot IDE";
	private final String THEME_BOX_TITLE = "Lighbot IDE Theme";
	private final String MENU_BOX_TITLE = "Menu";
	private final String OPEN_FILE_LBL = "Open File";
	private final String SAVE_FILE_LBL = "Save File";
	private final String BUILD_CODE_LBL = "Build Code";
	private final String CONSOLE_LBL = "Console";
	
	private final int WINDOW_HEIGHT = 600;
	private final int WINDOW_WIDTH = 1024;
	
	LightBot_Lang lang;

	@Override
	public void run() {
		lang = new LightBot_Lang();
		set_components();
	}
	
	private void set_components() {
        final JFrame frame = new JFrame(WINDOW_TITLE);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        final JPanel gui = new JPanel(new BorderLayout(5,5));

        JPanel plafComponents = new JPanel(
            new FlowLayout(FlowLayout.RIGHT, 3,3));
        plafComponents.setBorder(
            new TitledBorder(THEME_BOX_TITLE));

        final UIManager.LookAndFeelInfo[] plafInfos =
            UIManager.getInstalledLookAndFeels();
        String[] plafNames = new String[plafInfos.length];
        for (int ii=0; ii<plafInfos.length; ii++) {
            plafNames[ii] = plafInfos[ii].getName();
        }
        final JComboBox plafChooser = new JComboBox(plafNames);
        plafComponents.add(plafChooser);

        plafChooser.addActionListener( new ActionListener(){
            public void actionPerformed(ActionEvent ae) {
                int index = plafChooser.getSelectedIndex();
                try {
                    UIManager.setLookAndFeel(
                        plafInfos[index].getClassName() );
                    SwingUtilities.updateComponentTreeUI(frame);
                } catch(Exception e) {
                    e.printStackTrace();
                }
            }
        } );

        gui.add(plafComponents, BorderLayout.NORTH);

        JPanel dynamicLabels = new JPanel();
        dynamicLabels.setBorder(
            new TitledBorder(MENU_BOX_TITLE));
        dynamicLabels.setLayout(new BoxLayout(dynamicLabels, BoxLayout.PAGE_AXIS));
        gui.add(dynamicLabels, BorderLayout.WEST);

        JButton save_file_button = new JButton(SAVE_FILE_LBL);
        JButton open_file_button = new JButton(OPEN_FILE_LBL);
        JButton build_code_button = new JButton(BUILD_CODE_LBL);
        dynamicLabels.add(save_file_button);
        dynamicLabels.add(open_file_button);
        dynamicLabels.add(build_code_button);
        
        save_file_button.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				try {
					Stream_Handler.write_file(coding_field.getText(), "mycode");
				} catch (IOException e1) {
					e1.printStackTrace();
				}
			}
        	
        });
        
        coding_field = new JTextPane();
		coding_field.setPreferredSize(new Dimension(1000,400));
		coding_field.setFocusable(true);

        JScrollPane tableScroll = new JScrollPane(coding_field);
        Dimension tablePreferred = tableScroll.getPreferredSize();
        tableScroll.setPreferredSize(
            new Dimension(tablePreferred.width, 300) );

        JPanel imagePanel = new JPanel(new GridBagLayout());
        imagePanel.setBorder(
            new TitledBorder(CONSOLE_LBL));
        
        imagePanel.setPreferredSize(new Dimension(100,150));
        
        error_lbl = new JLabel("ERROR MSG");
        
        imagePanel.add(error_lbl, null);

        JSplitPane splitPane = new JSplitPane(
            JSplitPane.VERTICAL_SPLIT,
            tableScroll,
            new JScrollPane(imagePanel));
        gui.add(splitPane, BorderLayout.CENTER);

        frame.setContentPane(gui);

        frame.pack();

        frame.setLocationRelativeTo(null);
        try {
            frame.setLocationByPlatform(true);
            frame.setMinimumSize(frame.getSize());
        } catch(Throwable ignoreAndContinue) {
        }

        frame.setVisible(true);
    }
	
	private void open_file_explorer() {
		JFileChooser file_exp = new JFileChooser();
		if(file_exp.showOpenDialog(frame) == JFileChooser.APPROVE_OPTION) {
			coding_field.setText(Stream_Handler.get_file_content(file_exp.getSelectedFile()));
		}
	}
	
	@Override
	public void actionPerformed(ActionEvent arg0) {
		open_file_explorer();
	}
}
